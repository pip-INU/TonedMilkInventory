import numpy as np
import matplotlib.pyplot as plt
def plot_T1_T4(x_fixed):
    T1_vals = np.linspace(0, 24, 50)
    T4_vals = np.linspace(0, 24, 50)
    T1_grid, T4_grid = np.meshgrid(T1_vals, T4_vals)
    Profit_grid = np.vectorize(lambda T1, T4,: optimizer.calculate_total_profit(T1, T4, x_fixed, t, Q)['TotalProfit'])(T1_grid,T4_grid)
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(T4_grid, T1_grid, Profit_grid, cmap='plasma')
    ax.set_xlabel('T1')
    ax.set_ylabel('T4')
    ax.set_zlabel('Total Profit')
    ax.set_title(f'Total Profit vs T1 and T4 (x = {x_fixed})')
    plt.show()
    # T4 vs x (T1 constant)
def plot_T4_x(T1_fixed):
    T4_vals = np.linspace(13, 21, 50)
    x_vals = np.linspace(4, 30, 50)
    T4_grid, x_grid = np.meshgrid(T4_vals, x_vals)
    Profit_grid = np.vectorize(lambda T4, x: optimizer.calculate_total_profit(T1_fixed, T4, x, t, Q)['TotalProfit'])(T4_grid, x_grid)
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(T4_grid, x_grid, Profit_grid, cmap='plasma')
    ax.set_xlabel('T4')
    ax.set_ylabel('x')
    ax.set_zlabel('Total Profit')
    ax.set_title(f'Total Profit vs T4 and x (T1 = {T1_fixed})')
    plt.show()
    # T1 vs x (T4 constant)
def plot_T1_x(T4_fixed):
    T1_vals = np.linspace(4, 12, 50)
    x_vals = np.linspace(4, 30, 50)
    T1_grid, x_grid = np.meshgrid(T1_vals, x_vals)
    Profit_grid = np.vectorize(lambda T4, x: optimizer.calculate_total_profit(T4_fixed, T4, x, t, Q)['TotalProfit'])(T1_grid, x_grid)
    fig = plt.figure()
    ax = fig.add_subplot(111, projection='3d')
    ax.plot_surface(T1_grid, x_grid, Profit_grid, cmap='inferno')
    ax.set_xlabel('T1')
    ax.set_ylabel('x')
    ax.set_zlabel('Total Profit')
    ax.set_title(f'Total Profit vs T1 and x (T4 = {T4_fixed})')
    plt.show()